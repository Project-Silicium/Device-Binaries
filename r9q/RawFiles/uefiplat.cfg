[Config]
Version = 3
MaxMemoryRegions = 74
UnusableDDRMemoryAtBeginning = 1
UnusableDDRMemoryStartAddr = 0x80000000
UnusableDDRMemorySizeAtBeginning = 0x600000

[MemoryMap]
#                                                    EFI_RESOURCE_ EFI_RESOURCE_ATTRIBUTE_ EFI_MEMORY_TYPE ARM_REGION_ATTRIBUTE_
#MemBase,   MemSize,   MemLabel(32 Char.), BuildHob, ResourceType, ResourceAttribute, MemoryType, CacheAttributes
#--------------------- DDR  -----
0x80600000, 0x00100000, "Axon DMA",          AddMem, SYS_MEM, SYS_MEM_CAP, Reserv, WRITE_BACK_XN
0x80700000, 0x00100000, "BOOT",              AddMem, MEM_RES, SYS_MEM_CAP, BsData, WRITE_BACK_XN
0x80860000, 0x00020000, "AOP CMD DB",        AddMem, MEM_RES, UNCACHEABLE, Reserv, UNCACHED_UNBUFFERED_XN
0x80884000, 0x00010000, "XBL Log Buffer",    AddMem, SYS_MEM, SYS_MEM_CAP, Reserv, WRITE_BACK_XN
0x80900000, 0x00200000, "SMEM",              AddMem, MEM_RES, UNCACHEABLE, Reserv, UNCACHED_UNBUFFERED_XN
0x85200000, 0x16600000, "PIL Reserved",      AddMem, MEM_RES, UNCACHEABLE, Reserv, UNCACHED_UNBUFFERED_XN
0x9B800000, 0x03C00000, "DXE Heap",          AddMem, SYS_MEM, SYS_MEM_CAP, Conv,   WRITE_BACK_XN
0x9F400000, 0x00400000, "Sched Heap",        AddMem, SYS_MEM, SYS_MEM_CAP, BsData, WRITE_BACK_XN
0x9F800000, 0x00200000, "FV Region",         AddMem, SYS_MEM, SYS_MEM_CAP, BsData, WRITE_BACK_XN
0x9FA00000, 0x00200000, "ABOOT FV",          AddMem, SYS_MEM, SYS_MEM_CAP, Reserv, WRITE_BACK_XN
0x9FC00000, 0x00300000, "UEFI FD",           AddMem, SYS_MEM, SYS_MEM_CAP, BsData, WRITE_BACK
0x9FF00000, 0x0008C000, "SEC Heap",          AddMem, SYS_MEM, SYS_MEM_CAP, BsData, WRITE_BACK_XN
0x9FF8C000, 0x00001000, "CPU Vectors",       AddMem, SYS_MEM, SYS_MEM_CAP, BsData, WRITE_BACK
0x9FF8D000, 0x00003000, "MMU PageTables",    AddMem, SYS_MEM, SYS_MEM_CAP, BsData, WRITE_BACK_XN
0x9FF90000, 0x00040000, "UEFI Stack",        AddMem, SYS_MEM, SYS_MEM_CAP, BsData, WRITE_BACK_XN
0x9FFF7000, 0x00008000, "Log Buffer",        AddMem, SYS_MEM, SYS_MEM_CAP, RtData, WRITE_BACK_XN
0x9FFFF000, 0x00001000, "Info Blk",          AddMem, SYS_MEM, SYS_MEM_CAP, RtData, WRITE_BACK_XN
0xA0000000, 0x10000000, "Kernel",            AddMem, SYS_MEM, SYS_MEM_CAP, Reserv, WRITE_BACK_XN
0xC0000000, 0x0A100000, "SOD Test",          AddMem, SYS_MEM, SYS_MEM_CAP, Reserv, WRITE_BACK_XN
0xD0000000, 0x08800000, "Guest VM",          AddMem, SYS_MEM, SYS_MEM_CAP, Reserv, WRITE_BACK_XN
0xDA000000, 0x06000000, "TZApps Reserved",   HobOnlyNoCacheSetting, MEM_RES, UNCACHEABLE, Reserv, UNCACHED_UNBUFFERED_XN
0xE3100000, 0x00F00000, "DBI Dump",          NoHob,  MMAP_IO, INITIALIZED, Conv,   UNCACHED_UNBUFFERED_XN
# 0xE1000000, 0x02400000, "Display Reserved",  AddMem, MEM_RES, SYS_MEM_CAP, Reserv, WRITE_THROUGH_XN
# CONFIG_SAMSUNG_DISPLAY_UEFI
0xE4000000, 0x02400000, "Display Reserved",  AddMem, MEM_RES, SYS_MEM_CAP, Reserv, WRITE_THROUGH_XN
# CONFIG_SEC_DEBUG
0xF0000000, 0x00900000, "SEC Debug",         AddMem, SYS_MEM, SYS_MEM_CAP, Reserv, WRITE_BACK_XN

[RegisterMap]
#--------------------- Other -----
0x14680000, 0x00040000, "IMEM Base",          NoHob,  MMAP_IO, INITIALIZED, Conv,   NS_DEVICE
0x146BF000, 0x00001000, "IMEM Cookie Base",   AddDev, MMAP_IO, INITIALIZED, Conv,   NS_DEVICE
#--------------------- Register --
0x00400000, 0x00100000, "IPC_ROUTER_TOP",     AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x00780000, 0x00007000, "SECURITY CONTROL",   AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x00800000, 0x00300000, "QUP",                AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x010D0000, 0x00010000, "PRNG_CFG_PRNG",      AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x01FC0000, 0x00030000, "TCSR_TCSR_REGS",     AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x08800000, 0x00200000, "PERIPH_SS",          AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x0A600000, 0x04000000, "USB",                AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x0B000000, 0x04000000, "AOSS",               AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x0F100000, 0x00300000, "TLMM_WEST",          AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x0F500000, 0x00300000, "TLMM_SOUTH",         AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x0F900000, 0x00300000, "TLMM_NORTH",         AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x15000000, 0x000D0000, "SMMU",               AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x17800000, 0x00D99000, "APSS_HM",            AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE

[ConfigParameters]
# Update count if more than default 30 entries
ConfigParameterCount = 64

## UEFI CORE
PlatConfigFileName = "uefiplatLA.cfg"
OsTypeString = "LA"

# Force booting to shell whilst in pre-silicon phase
EnableShell = 0x1

# Tune based on heap needs for Initial tables, FV decompression and MMU tables through Dxe/BDS
InitialPagePoolCount = 0x700

# Shared IMEM (Cookies, Offsets)
SharedIMEMBaseAddr    = 0x146BF000
DloadCookieAddr = 0x01FD3000
# for full dump 0x10, for minidump 0x20
DloadCookieValue = 0x10

# NumCpus - max number of cores
NumCpus = 8
# NumActiveCores - number of cores used
NumActiveCores = 8

## ULogFile
SpecialLogPartition = "LOGFS:\"
MaxLogFileSize = 0x400000

# UEFI memory use
UefiMemUseThreshold = 0xE1

## USB ##
USBHS1_Config = 0x0
UsbFnIoRevNum = 0x00010001

## Buttons / KeyPad ##
PwrBtnShutdownFlag = 0x0

## SDCC ##
Sdc1GpioConfigOn = 0x1E92
Sdc2GpioConfigOn = 0x1E92
Sdc1GpioConfigOff = 0xA00
Sdc2GpioConfigOff = 0xA00

## SDHC Mode 0:Legacy Mode, Non-zero: SDHC Mode ##
EnableSDHCSwitch = 0x1

## UFS
EnableUfsIOC = 1
UfsSmmuConfigForOtherBootDev = 1

## PCIE
## PCIeRPNumber BIT 7:0  -> number of RPs to be enabled
## PCIeRPNumber BIT 15:8 -> BIT mask to identify which RPs are enabled
## Eg. value: 0x0502     -> Total two numbers of RPs, RP0 and RP2 are enabled
## Total RPs supported 8 numbers and bits allocated are 16 bits
#PCIeRPNumber=0x0101

## Security flag ##
SecurityFlag = 0xC4
# SecBootEnableFlag = 0x1               i.e. 0b00000001
# TreeTpmEnableFlag = 0x2               i.e. 0b00000010
# CommonMbnLoadFlag = 0x4               i.e. 0b00000100
# DxHdcp2LoadFlag = 0x8                 i.e. 0b00001000
# VariableServicesFlag = 0x10           i.e. 0b00010000
# WinsecappFlag = 0x20                  i.e. 0b00100000
# LoadSecAppFlag = 0x40                 i.e. 0b01000000
# LoadKeymasterFlag = 0x80              i.e. 0b10000000
# EnableQseeLogsFlag = 0x100            i.e. 0b 00000001 00000000

## smc invoke config ##
SmcInvokeConfig  = 0x20040100
#default maxLocalObj = 256, maxRemoreObj = 256, maxAsyncOp = 256
#MaxLocalObjMask   = 0xFFE00000  11 bits   max is 2047
#MaxRemoteObjMask  = 0x001FFC00  11 bits   max is 2047
#MaxAsyncOpMask    = 0x000003FF  10 bits   max is 1023

## Default app to boot in platform BDS init
DefaultChargerApp = "QcomChargerApp"
DefaultBDSBootApp = "LinuxLoader"

## Enable HotKey detection in RETAIL devices
DetectRetailUserAttentionHotkey = 0x00
## 0x17 is SCAN_ESC
DetectRetailUserAttentionHotkeyCode = 0x17
## Enable OEM Setup App launch in Retail ##
EnableOEMSetupAppInRetail = 0x0


## LogFs partition
## NOTE: Ensure logfs bin is flashed from /Tools/binaries ##
EnableLogFsSyncInRetail = 0x0

## ShmBridge Memory Size
ShmBridgememSize = 0xA00000

##  Multithreading options
EnableMultiThreading = 1
MaxCoreCnt = 8
# Keep the following number of cores active, including the boot core
EarlyInitCoreCnt = 2

## Get TZ App Logs ##
EnableUefiSecAppDebugLogDump = 0x0

## Allow Non Persistent Varialbes in Retail ##
## NOTE: Recommend disabling feature for Retail devices
AllowNonPersistentVarsInRetail = 0x1

# Initialize Display panel in its own thread to run in parallel to booting
EnableDisplayThread = 0x1

# Using imagefv to load display logo
EnableDisplayImageFv = 0x0

## Dynamic UART Log Buffer Size
## Refer to QcomPkg/Docs/UefiLogBufferSizeConfigReadme.txt for usage
#UARTLogBufferSize = 0x19000
UARTLogBufferSize = 0x32000

## Minidump Compression TA loading configuration (0x0 or 0x1)
MinidumpTALoadingCfg = 0x0

#DDRInfoDxe EnvDxe event callback flag
DDRInfoNotifyFlag = 0x0

#  FV Decompression on multicore option
EnableMultiCoreFvDecompression = 1

## Enable/Disable Variable Policy Engine ##
EnableVariablePolicyEngine = 0

## Allow individual ACPI tables loading ##
EnableACPIFallback = 0x0

# EUD Enable Address
EUDEnableAddr = 0x88E2000

## NOTE: Do not remove last newline, required by parser ##

