[Config]
Version = 3
MaxMemoryRegions = 74

[ConfigParameters]
# Update count if more than default 30 entries
ConfigParameterCount = 64

## UEFI CORE
PlatConfigFileName = "uefiplatLA.cfg"
OsTypeString = "LA"

# Force booting to shell whilst in pre-silicon phase
EnableShell = 0x1

# Tune based on Sec heap needs for FV decompression and MMU tables through Dxe/BDS
SecPagePoolCount = 0x800

# Shared IMEM (Cookies, Offsets)
SharedIMEMBaseAddr    = 0x14680000
DloadCookieAddr = 0x01FD9000
# for full dump 0x10, for minidump 0x20
DloadCookieValue = 0x10

# Skip dbi setup
SkipDBISetup = 0x0

# debug cookie of PIL subsystem, defined in FBC script
PilSubsysDbgCookieAddr = 0x146806DC
PilSubsysDbgCookieVal = 0x53444247

# NumCpus - max number of cores
NumCpus = 8
# NumActiveCores - number of cores used
NumActiveCores = 8

## ULogFile
SpecialLogPartition = "LOGFS:\"
MaxLogFileSize = 0x400000

# UEFI memory use
UefiMemUseThreshold = 0xE1

## USB ##
USBHS1_Config = 0x0
UsbFnIoRevNum = 0x00010001

## Buttons / KeyPad ##
PwrBtnShutdownFlag = 0x0

## SDCC ##
Sdc1GpioConfigOn = 0x1E92
Sdc2GpioConfigOn = 0x1E92
Sdc1GpioConfigOff = 0xA00
Sdc2GpioConfigOff = 0xA00

## SDHC Mode 0:Legacy Mode, Non-zero: SDHC Mode ##
EnableSDHCSwitch = 0x1

## UFS
EnableUfsIOC = 1
UfsSmmuConfigForOtherBootDev = 1

## PCIE
## PCIeRPNumber BIT 7:0  -> number of RPs to be enabled
## PCIeRPNumber BIT 15:8 -> BIT mask to identify which RPs are enabled
## Eg. value: 0x0502     -> Total two numbers of RPs, RP0 and RP2 are enabled
## Total RPs supported 8 numbers and bits allocated are 16 bits
#PCIeRPNumber=0x0101

## Security flag ##
SecurityFlag = 0xC4
# SecBootEnableFlag = 0x1               i.e. 0b00000001
# TreeTpmEnableFlag = 0x2               i.e. 0b00000010
# CommonMbnLoadFlag = 0x4               i.e. 0b00000100
# DxHdcp2LoadFlag = 0x8                 i.e. 0b00001000
# VariableServicesFlag = 0x10           i.e. 0b00010000
# WinsecappFlag = 0x20                  i.e. 0b00100000
# LoadSecAppFlag = 0x40                 i.e. 0b01000000
# LoadKeymasterFlag = 0x80              i.e. 0b10000000
# EnableQseeLogsFlag = 0x100            i.e. 0b 00000001 00000000

## Default app to boot in platform BDS init
DefaultChargerApp = "QcomChargerApp"
DefaultBDSBootApp = "LinuxLoader"

## Enable HotKey detection in RETAIL devices
DetectRetailUserAttentionHotkey = 0x00
## 0x17 is SCAN_ESC
DetectRetailUserAttentionHotkeyCode = 0x17
## Enable OEM Setup App launch in Retail ##
EnableOEMSetupAppInRetail = 0x0


## LogFs partition
## NOTE: Ensure logfs bin is flashed from /Tools/binaries ##
EnableLogFsSyncInRetail = 0x1

## ShmBridge Memory Size
ShmBridgememSize = 0xA00000

##  Multithreading options
EnableMultiThreading = 1
# Keep the following number of cores active, including the boot core
# For Early presilicon stage, this cna be set to 1 since we want to enable 
# 1 core ie boot core
EarlyInitCoreCnt = 2

## Get TZ App Logs ##
EnableUefiSecAppDebugLogDump = 0x0

## Allow Non Persistent Varialbes in Retail ##
## NOTE: Recommend disabling feature for Retail devices
AllowNonPersistentVarsInRetail = 0x1

# Initialize Display panel in its own thread to run in parallel to booting
EnableDisplayThread = 0x1

# Using imagefv to load display logo
EnableDisplayImageFv = 0x1

## Dynamic UART Log Buffer Size
## Refer to QcomPkg/Docs/UefiLogBufferSizeConfigReadme.txt for usage
#UARTLogBufferSize = 0x19000

#DDRInfoDxe EnvDxe event callback flag
DDRInfoNotifyFlag = 0x0

#  FV Decompression on multicore option
#  Value is 0 for early presilicon stage
EnableMultiCoreFvDecompression = 1

## Enable/Disable Variable Policy Engine ##
EnableVariablePolicyEngine = 0

## Allow individual ACPI tables loading ## 
EnableACPIFallback = 0x0

## Address to get Value of DRAM clock period MCCC_CLK_PERIOD
DRAM_CLK_PERIOD_ADDR = 0x240BA050
## NOTE: Do not remove last newline, required by parser ##

